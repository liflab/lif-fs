<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    A build script for a super-project containing multiple sub-projects
    Copyright (C) 2019-2023  Sylvain Hallé

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<project
  name="SuperProject"
  default="all"
  basedir="."
  xmlns:jacoco="antlib:org.jacoco.ant">

  <!-- The project's display name -->
  <property name="build.name" value="PetitPoucet"/>
  
  <!-- The author -->
  <property name="build.author" value="Sylvain Hallé"/>
  
  <!-- The folder containing lib files for this super-script -->
  <property name="build.libdir" value="lib"/>
  
  <!-- Versions of various dependencies -->
  <property name="versions.jacoco" value="0.8.8"/>
  
  <target name="init">
    <!-- Nothing to do at the moment -->
  </target>
  
  <target name="all">
    <!-- Compile core -->
    <ant dir="Core" target="jar" />
    <!-- Copy core to other projects -->
    <copy todir="Memento/lib">
      <fileset dir=".">
        <include name="lif-fs-core*.jar"/>
        <exclude name="*javadoc.jar"/>
        <exclude name="*sources.jar"/>
      </fileset>
    </copy>
    <copy todir="Net/lib">
      <fileset dir=".">
        <include name="lif-fs-core*.jar"/>
        <exclude name="*javadoc.jar"/>
        <exclude name="*sources.jar"/>
      </fileset>
    </copy>
    <!-- Compile others -->
    <ant dir="Memento" target="jar" />
    <ant dir="Net" target="jar" />
  </target>
  
  <target name="download-deps">
    <ant dir="Core" usenativebasedir="true" target="download-deps" />
    <ant dir="Memento" usenativebasedir="true" target="download-deps" />
    <ant dir="Net" usenativebasedir="true" target="download-deps" />
  </target>
  
  <target name="clean-reports">
    <delete dir="tests"/>
    <delete dir="coverage"/>
    <ant dir="Core" usenativebasedir="true" target="clean-reports" />
    <ant dir="Memento" usenativebasedir="true" target="clean-reports" />
    <ant dir="Net" usenativebasedir="true" target="clean-reports" />
  </target>
  
  <target name="clean">
    <delete dir="tests"/>
    <delete dir="coverage"/>
    <ant dir="Core" usenativebasedir="true" target="clean" />
    <ant dir="Memento" usenativebasedir="true" target="clean" />
    <ant dir="Net" usenativebasedir="true" target="clean" />
  </target>

  <target name="wipe">
    <delete dir="tests"/>
    <delete dir="coverage"/>
    <ant dir="Core" usenativebasedir="true" target="wipe" />
    <ant dir="Memento" usenativebasedir="true" target="wipe" />
    <ant dir="Net" usenativebasedir="true" target="wipe" />
  </target>
  
  <target name="test">
    <ant dir="Core" usenativebasedir="true" target="test" />
    <ant dir="Memento" usenativebasedir="true" target="test" />
  </target>
  
  <target name="junit-report">
    <!-- For the junit-report task, it is sufficient to call the task of a single sub-project -->
    <ant dir="Core" usenativebasedir="true" target="junit-report" />
  </target>
  
  <target name="jacoco-report" depends="jacoco">
    <!-- Call the jacoco-report task on children -->
    <ant dir="Core" usenativebasedir="true" target="jacoco-report" />
    <ant dir="Memento" usenativebasedir="true" target="jacoco-report" />
    <ant dir="Net" usenativebasedir="true" target="jacoco-report" />
    <!-- Load JaCoCo -->
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
      <classpath path="${build.libdir}/jacocoant.jar"/>
    </taskdef>
    <mkdir dir="coverage"/>
    <jacoco:merge destfile="coverage/merged.exec">
        <fileset dir="Core/tests/coverage" includes="*.exec"/>
        <fileset dir="Memento/tests/coverage" includes="*.exec"/>
        <fileset dir="Net/tests/coverage" includes="*.exec"/>
    </jacoco:merge>
    <jacoco:report>
      <executiondata>
        <file file="coverage/merged.exec"/>
      </executiondata>
      <structure name="${build.name}">
        <classfiles>
            <fileset dir="Core/bin"/>
            <fileset dir="Memento/bin"/>
            <fileset dir="Net/bin"/>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="Core/src"/>
          <fileset dir="Memento/src"/>
          <fileset dir="Net/src"/>
        </sourcefiles>
      </structure>
      <html destdir="coverage"/>
      <xml destfile="tests/report.xml"/>
    </jacoco:report>
  </target>
  
  <target name="report" depends="junit-report,jacoco-report">
    <!-- Just call the two dependent tasks -->
  </target>
  
  <target name="show-properties">
    <ant dir="Core" usenativebasedir="true" target="show-properties" />
  </target>
  
  <!-- Target: jacoco
       Download JaCoCo if not present, and put it in the lib folder
  -->
  <property name="jacoco.jarname" value="jacocoant.jar"/>
  <condition property="jacoco.absent" value="false" else="true">
    <available file="${build.libdir}/${jacoco.jarname}"/>
  </condition>
  <target name="jacoco" if="${jacoco.absent}" description="Install JaCoCo if not present">
    <mkdir dir="${build.libdir}"/>
    <get src="https://github.com/jacoco/jacoco/releases/download/v${versions.jacoco}/jacoco-${versions.jacoco}.zip" dest="${build.libdir}/jacoco.zip"/>
    <unzip src="${build.libdir}/jacoco.zip" dest="${build.libdir}">
      <patternset>
        <include name="**/*.jar"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
  </target>
  
  <target name="javadoc">
    <mkdir dir="../docs/javadoc"/>
    <mkdir dir="../docs/javadoc/doc-files"/>
    <javadoc
      overview="project-overview.html"
      destdir="../docs/javadoc"
      packagenames="*"
      excludepackagenames=""
      defaultexcludes="yes"
      author="true"
      version="true"
      use="true"
      Encoding="utf8"
      docencoding="utf8"
      charset="utf8"
      windowtitle="lif-fs Documentation">
      <doctitle><![CDATA[<h1>]]>${build.name}<![CDATA[ Documentation</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright&nbsp;&#169; ]]>${build.author}<![CDATA[. All Rights Reserved.</i>]]></bottom>
      <link href="http://docs.oracle.com/javase/8/docs/api/"/>
      <sourcepath>
        <pathelement path="Core/src"/>
        <pathelement path="Net/src"/>
        <pathelement path="Memento/src"/>
      </sourcepath>
      <classpath>
        <fileset dir="Net/dep">
          <include name="**/*.jar"/>
        </fileset>
        <!--<fileset dir="Core/dep">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="Core/lib">
          <include name="**/*.jar"/>
        </fileset>-->
      </classpath>
      <group title="Core" packages="ca.uqac.lif.fs:ca.uqac.lif.fs.*"/>
      <group title="Net" packages="ca.uqac.lif.fs.net:ca.uqac.lif.fs.net.*"/>
      <group title="Memento" packages="ca.uqac.lif.fs.memento:ca.uqac.lif.fs.memento.*"/>
    </javadoc>
    <!--<copy todir="../docs/javadoc/doc-files">
      <fileset dir="Net/src/doc-files"/>
    </copy>-->
  </target>
</project>